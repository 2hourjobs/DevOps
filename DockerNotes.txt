
Hola :-)

https://docs.docker.com/

# Basic commands
$ docker -v #to check docker version
$ docker pull ImageName #to install/pull/download a docker image in docker machine.

docker run [OPTIONS] IMAGE [COMMAND] [ARG...] #Docker Run command will find with the specific docker image documentation

$ docker push username/ImageName #to push a own docker image on Dockerhub. follow the naming convension. username/imageName
$ docker images #to check installed available images
$ docker ps #to view all running containers
$ docker ps -a #to view all containers including running and stoped/exited.
$ docker stop containerID/IDs #to stop a container eg. docker stop 343, no need full container id. just unique part of containerID. multipe containerID space separated, supporte to take bulk action.  
$ docker start containerID/IDs #to start a stoped container. multiple ids supported to take bulk action
$ docker inspect containerID #to show the details of a container. Installation/environment variables/host with all the details of container.
$ docker rm containerID #to remove stoped/exited container from process
$ docker rmi imageID/IDs #to remove/delete/uninstall image/images from docker machine

$ docker login #to login Dockerhub
.................................................................................

### Real life example docker run commands
#Mysql
docker run --name go_mysql -v /srv/gomysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=111111 -d mariadb #basic mysql install and run command in linux machine
$ docker run --name some-mysql -v /srv/gomysql:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci #advance mysql docker run command. Mysql Database To support utf8mb4_unicode_ci

#MongoDB
$ docker run --name mongodb -v ~/mongodata/datadir:/data/db -d mongo #basic mongoDB install and run command

#Golang API Server image run on docker
$ docker run --net=host --rm -d -p 443:443 --name go-app-server whoshakhawat/go-app-serverssl # --net=host is very special command to share host network. Also the host and the container shares the service ports that are available to the host
..................................................................................


### Real life example of Docker Build and run command

##Golang Example
................

#Dockerfile
FROM golang:1.9 #golang image

WORKDIR /go/src/github.com/sohag1990/go-gin-app #creating working directory inside new image
COPY . . #copy files from current local directory to docker new image current working directory

RUN go get -d -v ./... #to install dependency packages using go get comand.
RUN go install -v ./... #to build the go application inside the new docker image
CMD ["go-gin-app"] # to run the app this CMD will trigger. "go-gin-app" this name is the same name of project directory name

##Build command to build a new docker image using this docker file
$ docker build -t whoshakhawat/backend-app-api-server . # .(dot) is denoted for current directory. build docker image from current directory.
## Run Command
$ docker run --net=host --rm -d -p 443:443 --name backend-app-api-server-ssl whoshakhawat/backend-app-api-server # --net=host is very special command to share host network. Also the host and the container shares the service ports that are available to the host



##Laravel Example
.................
#Dockerfile
FROM php:7
RUN apt-get update -y && apt-get install -y openssl zip unzip git
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN docker-php-ext-install pdo mbstring
RUN apt-get install php7.2-mysql
WORKDIR /app #creating "app" directory inside the new image
COPY . /app
RUN composer install
#RUN composer update #if require to composer to update, uncomment run this command
#RUN composer upgrade #if require to composer to upgrade, uncomment run this command
RUN composer dump-autoload

CMD php artisan serve --host=0.0.0.0 --port=8181 #php artisan command to run the app
EXPOSE 8181

##Build command to build a new docker image using this docker file
$ docker build -t whoshakhawat/laravel-app .
## Run the docker image in container
$ docker run -d -p 8181:8181 whoshakhawat/laravel-app

